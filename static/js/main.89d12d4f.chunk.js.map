{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Popup.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","popup","b","onClick","style","padding","border","background","cursor","className","src","alt","CardList","robots","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","overflowY","height","children","Popup","imgsrc","details","company","username","phone","website","App","onSearchChange","event","setState","search_field","target","value","popupFunction","state","console","log","popupData","filtered_robots","popupImg","a","fetch","then","response","json","users","this","filter","toLowerCase","includes","Fragment","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89d12d4f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({id,name,email,popup,b}) => {\r\n    \r\n    return(\r\n        <button onClick={popup} style={{padding: 0, border: 0, background: \"transparent\", cursor: \"pointer\"}}>\r\n            <div className=\"tc bg-light-green dib br3 pa3 ma2 shadow-2 grow\">\r\n                <img src={`https://robohash.org/${id}?200x200`} alt=\"robotsImage\" id={b}/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots, popup}) => {\r\n    return(\r\n        <div>\r\n            {robots.map((robot,i) => <Card id={robot.id} name={robot.name} email={robot.email} key={i} popup={popup} b={i}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <input type=\"search\" placeholder=\"Search robots\" onChange={searchChange} className=\"pa3 ba b-green bg-light-blue\"/>         \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border : '3px solid black', height : '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\nimport \"./popup.css\"\r\n\r\nconst Popup = ({popup, imgsrc, details}) => {\r\n    return(\r\n        <div className=\"popup-back\">\r\n            <div className=\"popup-container\">\r\n                <div className=\"popup-close\" onClick={popup}>x</div>\r\n                <div className=\"popup-content\">\r\n                    <img className=\"image\" src={imgsrc}/>\r\n                    <div className=\"details\">\r\n                        <p>Name: {details.name}</p>\r\n                        <p>Email: {details.email}</p>\r\n                        <p>Company: {details.company.name}</p>\r\n                        <p>User name: {details.username}</p>\r\n                        <p>Phone: {details.phone}</p>\r\n                        <p>Website: {details.website}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;","import React,{ Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport \"tachyons\";\r\nimport './App.css';\r\nimport Popup from '../components/Popup';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      search_field: \"\",\r\n      popup: false\r\n    }\r\n    this.popupImg = \"\";\r\n    this.filtered_robots =[]\r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(users => {\r\n      this.setState({robots: users});\r\n    });\r\n  }\r\n  \r\n  onSearchChange = (event) => {\r\n    this.setState({search_field: event.target.value});\r\n  }\r\n\r\n  popupFunction = (event) => {\r\n    if(this.state.popup) {\r\n      console.log(\"close\");\r\n      this.setState({popup: false});\r\n    }\r\n    else {\r\n      this.popupData = {\r\n       imgsrc: event.target.src,\r\n       details: this.filtered_robots[event.target.id]\r\n      }\r\n      console.log(this.popupData.details);\r\n      this.setState({popup: true});\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {robots, search_field, popup} = this.state;\r\n    this.filtered_robots = robots.filter(robot => robot.name.toLowerCase().includes(search_field.toLowerCase()));\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {popup?<Popup popup={this.popupFunction} imgsrc={this.popupData.imgsrc} details={this.popupData.details}/>:\"\"}\r\n        <div className=\"tc\">\r\n          <h1>Robofans</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n            { (!this.filtered_robots.length)?\r\n                <h2>No profile match your search</h2>\r\n                :\r\n                <CardList robots={this.filtered_robots} popup={this.popupFunction}/>\r\n            }\r\n          </Scroll>\r\n        </div>\r\n      </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}